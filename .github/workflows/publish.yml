name: CI

on:
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Fetch source code
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        path: ad4m-languages
    - name: Use Nix
      uses: cachix/install-nix-action@v12
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Configure Nix substituters
      run: |
        set -xe
        mkdir -p ~/.config/nix/
        cp ./.github/nix.conf ~/.config/nix/
    - uses: cachix/cachix-action@v10
      with:
        name: perspect3vism
        # authToken: '${{ secrets.CACHIX_HOLOCHAIN_CI }}'
    - name: Prepare Nix environment
      run: nix-shell hc-dna/default.nix --command "echo Completed"
    - name: Release languages
      run: ./release.sh
    
    # publish languages
    - name: Fetch source code of ad4m-host
      uses: actions/checkout@v2
      with:
        repository: 'kaichaosun/ad4m-host'
        path: ad4m-host
    - name: Install dependencies
      run: npm install && npm run build-holochain && npm run get-languages
    - name: Get agent status
      id: get_agent_status
      run: |
        npm run ad4m &
        curl -g \
          -X POST \
          -H "Content-Type: application/json" \
          -d '{
            "query": "{ agentStatus { did didDocument error isInitialized isUnlocked } }"
          }' \
          http://127.0.0.1:4000/graphql
